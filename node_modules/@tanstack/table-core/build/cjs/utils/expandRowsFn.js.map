{"version":3,"file":"expandRowsFn.js","sources":["../../../src/utils/expandRowsFn.ts"],"sourcesContent":["import {\n  TableInstance,\n  Row,\n  RowModel,\n  AnyGenerics,\n  PartialGenerics,\n} from '../types'\n\nexport function expandRowsFn<TGenerics extends AnyGenerics>(\n  instance: TableInstance<TGenerics>,\n  sortedRowModel: RowModel<TGenerics>\n): RowModel<TGenerics> {\n  const expandedRows: Row<TGenerics>[] = []\n\n  const handleRow = (row: Row<TGenerics>) => {\n    expandedRows.push(row)\n\n    if (\n      instance.options.expandSubRows &&\n      row.subRows?.length &&\n      instance.getIsRowExpanded(row.id)\n    ) {\n      row.subRows.forEach(handleRow)\n    }\n  }\n\n  sortedRowModel.rows.forEach(handleRow)\n\n  return {\n    rows: expandedRows,\n    flatRows: sortedRowModel.flatRows,\n    rowsById: sortedRowModel.rowsById,\n  }\n}\n"],"names":["expandRowsFn","instance","sortedRowModel","expandedRows","handleRow","row","push","options","expandSubRows","subRows","length","getIsRowExpanded","id","forEach","rows","flatRows","rowsById"],"mappings":";;;;;;;;;;;;;;AAQO,SAASA,YAAT,CACLC,QADK,EAELC,cAFK,EAGgB;AACrB,MAAMC,YAA8B,GAAG,EAAvC;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAyB;AAAA;;AACzCF,IAAAA,YAAY,CAACG,IAAb,CAAkBD,GAAlB;;AAEA,QACEJ,QAAQ,CAACM,OAAT,CAAiBC,aAAjB,oBACAH,GAAG,CAACI,OADJ,aACA,aAAaC,MADb,IAEAT,QAAQ,CAACU,gBAAT,CAA0BN,GAAG,CAACO,EAA9B,CAHF,EAIE;AACAP,MAAAA,GAAG,CAACI,OAAJ,CAAYI,OAAZ,CAAoBT,SAApB;AACD;AACF,GAVD;;AAYAF,EAAAA,cAAc,CAACY,IAAf,CAAoBD,OAApB,CAA4BT,SAA5B;AAEA,SAAO;AACLU,IAAAA,IAAI,EAAEX,YADD;AAELY,IAAAA,QAAQ,EAAEb,cAAc,CAACa,QAFpB;AAGLC,IAAAA,QAAQ,EAAEd,cAAc,CAACc;AAHpB,GAAP;AAKD;;;;"}