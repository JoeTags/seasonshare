/**
 * table-core
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var filterRowsUtils = require('./filterRowsUtils.js');

function globalFilterRowsFn(instance, rowModel) {
  var globalFilter = instance.getState().globalFilter;
  var filterFromLeafRows = instance.options.filterFromLeafRows;
  var filterFn = instance.getGlobalFilterFn();

  if (!filterFn) {
    if (process.env.NODE_ENV !== 'production') {
      console.warn("Could not find a valid 'globalFilterType'");
    }

    return rowModel;
  }

  var filterableColumns = instance.getAllLeafColumns().filter(function (column) {
    return column.getCanGlobalFilter();
  });
  var filterableColumnIds = filterableColumns.map(function (d) {
    return d.id;
  });

  var filterRows = function filterRows(rows) {
    return filterFn(rows, filterableColumnIds, globalFilter);
  };

  if (filterFromLeafRows) {
    filterRowsUtils.filterRowModelFromLeafs(rowModel.rows, filterRows, instance);
  }

  return filterRowsUtils.filterRowModelFromRoot(rowModel.rows, filterRows, instance);
}

exports.globalFilterRowsFn = globalFilterRowsFn;
//# sourceMappingURL=globalFilterRowsFn.js.map
