/**
 * table-core
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('./_virtual/_rollupPluginBabelHelpers.js');

//
function init(opts) {
  return {
    createTableFactory: function createTableFactory(factoryOptions) {
      return function () {
        return _createTable(undefined, undefined, _rollupPluginBabelHelpers["extends"]({}, factoryOptions, opts));
      };
    },
    createTable: function createTable() {
      return _createTable(undefined, undefined, opts);
    }
  };
}

function _createTable(_, __, __options) {
  return {
    generics: undefined,
    __options: __options != null ? __options : {
      render: function render() {
        throw new Error();
      }
    },
    createColumns: function createColumns(columns) {
      return columns;
    },
    createDisplayColumn: function createDisplayColumn(column) {
      return _rollupPluginBabelHelpers["extends"]({}, column, {
        columnDefType: 'display'
      });
    },
    createGroup: function createGroup(column) {
      return _rollupPluginBabelHelpers["extends"]({}, column, {
        columnDefType: 'group'
      });
    },
    createDataColumn: function createDataColumn(accessor, column) {
      column = _rollupPluginBabelHelpers["extends"]({}, column, {
        columnDefType: 'data',
        id: column.id
      });

      if (typeof accessor === 'string') {
        var _column$id;

        return _rollupPluginBabelHelpers["extends"]({}, column, {
          id: (_column$id = column.id) != null ? _column$id : accessor,
          accessorKey: accessor
        });
      }

      if (typeof accessor === 'function') {
        return _rollupPluginBabelHelpers["extends"]({}, column, {
          accessorFn: accessor
        });
      }

      throw new Error('Invalid accessor');
    }
  };
}

exports.init = init;
//# sourceMappingURL=createTable.js.map
