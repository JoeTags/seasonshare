import { AnyGenerics, Row } from './types';
export declare const reSplitAlphaNumeric: RegExp;
export declare const sortTypes: {
    alphanumeric: typeof alphanumeric;
    alphanumericCaseSensitive: typeof alphanumericCaseSensitive;
    text: typeof text;
    textCaseSensitive: typeof textCaseSensitive;
    datetime: typeof datetime;
    basic: typeof basic;
};
export declare type BuiltInSortType = keyof typeof sortTypes;
declare function alphanumeric<TGenerics extends AnyGenerics>(rowA: Row<TGenerics>, rowB: Row<TGenerics>, columnId: string): number;
declare function alphanumericCaseSensitive<TGenerics extends AnyGenerics>(rowA: Row<TGenerics>, rowB: Row<TGenerics>, columnId: string): number;
declare function text<TGenerics extends AnyGenerics>(rowA: Row<TGenerics>, rowB: Row<TGenerics>, columnId: string): 0 | 1 | -1;
declare function textCaseSensitive<TGenerics extends AnyGenerics>(rowA: Row<TGenerics>, rowB: Row<TGenerics>, columnId: string): 0 | 1 | -1;
declare function datetime<TGenerics extends AnyGenerics>(rowA: Row<TGenerics>, rowB: Row<TGenerics>, columnId: string): 0 | 1 | -1;
declare function basic<TGenerics extends AnyGenerics>(rowA: Row<TGenerics>, rowB: Row<TGenerics>, columnId: string): 0 | 1 | -1;
export {};
