/**
 * react-table
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react'), require('@tanstack/table-core')) :
  typeof define === 'function' && define.amd ? define(['exports', 'react', '@tanstack/table-core'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ReactTable = {}, global.React, global.TableCore));
})(this, (function (exports, React, tableCore) { 'use strict';

  function _interopNamespace(e) {
    if (e && e.__esModule) return e;
    var n = Object.create(null);
    if (e) {
      Object.keys(e).forEach(function (k) {
        if (k !== 'default') {
          var d = Object.getOwnPropertyDescriptor(e, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: true,
            get: function () { return e[k]; }
          });
        }
      });
    }
    n["default"] = e;
    return Object.freeze(n);
  }

  var React__namespace = /*#__PURE__*/_interopNamespace(React);

  function _extends() {
    _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  var render = function render(Comp, props) {
    return !Comp ? null : isReactComponent(Comp) ? /*#__PURE__*/React__namespace.createElement(Comp, props) : Comp;
  };

  function isReactComponent(component) {
    return isClassComponent(component) || typeof component === 'function' || isExoticComponent(component);
  }

  function isClassComponent(component) {
    return typeof component === 'function' && function () {
      var proto = Object.getPrototypeOf(component);
      return proto.prototype && proto.prototype.isReactComponent;
    }();
  }

  function isExoticComponent(component) {
    return typeof component === 'object' && typeof component.$$typeof === 'symbol' && ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description);
  }

  var _init = tableCore.init({
    render: render
  }),
      createTable = _init.createTable,
      createTableFactory = _init.createTableFactory;
  function useTable(table, options) {
    var _table$__options;

    // Compose in the generic options to the user options
    var resolvedOptions = _extends({}, (_table$__options = table.__options) != null ? _table$__options : {}, {
      state: {},
      // Dummy state
      onStateChange: function onStateChange() {},
      // noop
      render: render
    }, options); // Create a new table instance and store it in state


    var _React$useState = React__namespace.useState(function () {
      return tableCore.createTableInstance(resolvedOptions);
    }),
        instance = _React$useState[0]; // By default, manage table state here using the instance's initial state


    var _React$useState2 = React__namespace.useState(function () {
      return instance.initialState;
    }),
        state = _React$useState2[0],
        setState = _React$useState2[1]; // Compose the default state above with any user state. This will allow the user
    // to only control a subset of the state if desired.


    instance.setOptions(function (prev) {
      return _extends({}, prev, options, {
        state: _extends({}, state, options.state),
        // Similarly, we'll maintain both our internal state and any user-provided
        // state.
        onStateChange: function onStateChange(updater) {
          setState(updater);
          options.onStateChange == null ? void 0 : options.onStateChange(updater);
        }
      });
    });
    return instance;
  }

  exports.createTable = createTable;
  exports.createTableFactory = createTableFactory;
  exports.render = render;
  exports.useTable = useTable;
  Object.keys(tableCore).forEach(function (k) {
    if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
      enumerable: true,
      get: function () { return tableCore[k]; }
    });
  });

  Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=index.development.js.map
