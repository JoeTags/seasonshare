{"version":3,"file":"index.js","sources":["../../src/index.tsx"],"sourcesContent":["import * as React from 'react'\nexport * from '@tanstack/table-core'\n\nimport {\n  createTableInstance,\n  PartialKeys,\n  Options,\n  TableInstance,\n  CreateTableFactoryOptions,\n  Table,\n  init,\n  AnyGenerics,\n} from '@tanstack/table-core'\n\nexport type Renderable<TProps> =\n  | React.ReactNode\n  | React.FunctionComponent<TProps>\n  | React.Component<TProps>\n\nexport const render = <TProps extends {}>(\n  Comp: Renderable<TProps>,\n  props: TProps\n): React.ReactNode =>\n  !Comp ? null : isReactComponent(Comp) ? <Comp {...props} /> : Comp\n\nexport type Render = typeof render\n\nfunction isReactComponent(component: unknown): component is React.FC {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component: any) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component: any) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n\nconst { createTable, createTableFactory } = init({ render })\n\nexport { createTable, createTableFactory }\n\nexport function useTable<TGenerics extends AnyGenerics>(\n  table: Table<TGenerics>,\n  options: PartialKeys<\n    Omit<\n      Options<TGenerics>,\n      keyof CreateTableFactoryOptions<any, any, any, any>\n    >,\n    'state' | 'onStateChange'\n  >\n): TableInstance<TGenerics> {\n  // Compose in the generic options to the user options\n  const resolvedOptions: Options<TGenerics> = {\n    ...(table.__options ?? {}),\n    state: {}, // Dummy state\n    onStateChange: () => {}, // noop\n    render,\n    ...options,\n  }\n\n  // Create a new table instance and store it in state\n  const [instance] = React.useState(() =>\n    createTableInstance<TGenerics>(resolvedOptions)\n  )\n\n  // By default, manage table state here using the instance's initial state\n  const [state, setState] = React.useState(() => instance.initialState)\n\n  // Compose the default state above with any user state. This will allow the user\n  // to only control a subset of the state if desired.\n  instance.setOptions(prev => ({\n    ...prev,\n    ...options,\n    state: {\n      ...state,\n      ...options.state,\n    },\n    // Similarly, we'll maintain both our internal state and any user-provided\n    // state.\n    onStateChange: updater => {\n      setState(updater)\n      options.onStateChange?.(updater)\n    },\n  }))\n\n  return instance\n}\n"],"names":["render","Comp","props","isReactComponent","component","isClassComponent","isExoticComponent","proto","Object","getPrototypeOf","prototype","$$typeof","includes","description","init","createTable","createTableFactory","useTable","table","options","resolvedOptions","__options","state","onStateChange","React","useState","createTableInstance","instance","initialState","setState","setOptions","prev","updater"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAmBaA,MAAM,GAAG,SAATA,MAAS,CACpBC,IADoB,EAEpBC,KAFoB;AAAA,SAIpB,CAACD,IAAD,GAAQ,IAAR,GAAeE,gBAAgB,CAACF,IAAD,CAAhB,gBAAyB,oBAAC,IAAD,EAAUC,KAAV,CAAzB,GAA+CD,IAJ1C;AAAA;;AAQtB,SAASE,gBAAT,CAA0BC,SAA1B,EAAqE;AACnE,SACEC,gBAAgB,CAACD,SAAD,CAAhB,IACA,OAAOA,SAAP,KAAqB,UADrB,IAEAE,iBAAiB,CAACF,SAAD,CAHnB;AAKD;;AAED,SAASC,gBAAT,CAA0BD,SAA1B,EAA0C;AACxC,SACE,OAAOA,SAAP,KAAqB,UAArB,IACC,YAAM;AACL,QAAMG,KAAK,GAAGC,MAAM,CAACC,cAAP,CAAsBL,SAAtB,CAAd;AACA,WAAOG,KAAK,CAACG,SAAN,IAAmBH,KAAK,CAACG,SAAN,CAAgBP,gBAA1C;AACD,GAHD,EAFF;AAOD;;AAED,SAASG,iBAAT,CAA2BF,SAA3B,EAA2C;AACzC,SACE,OAAOA,SAAP,KAAqB,QAArB,IACA,OAAOA,SAAS,CAACO,QAAjB,KAA8B,QAD9B,IAEA,CAAC,YAAD,EAAe,mBAAf,EAAoCC,QAApC,CAA6CR,SAAS,CAACO,QAAV,CAAmBE,WAAhE,CAHF;AAKD;;YAE2CC,IAAI,CAAC;AAAEd,EAAAA,MAAM,EAANA;AAAF,CAAD,CAAhD;AAAA,IAAQe,WAAR,SAAQA,WAAR;AAAA,IAAqBC,kBAArB,SAAqBA;AAId,SAASC,QAAT,CACLC,KADK,EAELC,OAFK,EASqB;AAAA;;AAC1B;AACA,MAAMC,eAAmC,oCACnCF,KAAK,CAACG,SAD6B,+BAChB,EADgB;AAEvCC,IAAAA,KAAK,EAAE,EAFgC;AAE5B;AACXC,IAAAA,aAAa,EAAE,yBAAM,EAHkB;AAGd;AACzBvB,IAAAA,MAAM,EAANA;AAJuC,KAKpCmB,OALoC,CAAzC,CAF0B;;;AAW1B,wBAAmBK,KAAK,CAACC,QAAN,CAAe;AAAA,WAChCC,mBAAmB,CAAYN,eAAZ,CADa;AAAA,GAAf,CAAnB;AAAA,MAAOO,QAAP,sBAX0B;;;AAgB1B,yBAA0BH,KAAK,CAACC,QAAN,CAAe;AAAA,WAAME,QAAQ,CAACC,YAAf;AAAA,GAAf,CAA1B;AAAA,MAAON,KAAP;AAAA,MAAcO,QAAd,uBAhB0B;AAmB1B;;;AACAF,EAAAA,QAAQ,CAACG,UAAT,CAAoB,UAAAC,IAAI;AAAA,wBACnBA,IADmB,EAEnBZ,OAFmB;AAGtBG,MAAAA,KAAK,eACAA,KADA,EAEAH,OAAO,CAACG,KAFR,CAHiB;AAOtB;AACA;AACAC,MAAAA,aAAa,EAAE,uBAAAS,OAAO,EAAI;AACxBH,QAAAA,QAAQ,CAACG,OAAD,CAAR;AACAb,QAAAA,OAAO,CAACI,aAAR,oBAAAJ,OAAO,CAACI,aAAR,CAAwBS,OAAxB;AACD;AAZqB;AAAA,GAAxB;AAeA,SAAOL,QAAP;AACD;;;;"}